<%- include('./includes/adminHeader.ejs'); -%>


    <!-- /.sidebar -->

    <div id="page-wrapper">
        <div class="container-fluid">
            <div class="row">
                <div class="col-lg-8">
                    <h1 class="page-header">Dashboard</h1>
                </div>

                <!-- /.col-lg-12 -->
            </div>
            <!-- /.row -->
            <div class="row">
                <div class="col-lg-3 col-md-6">
                    <div class="panel panel-primary">
                        <div class="panel-heading">
                            <div class="row">
                                <div class="col-xs-3">
                                    <i class="fa fa-users fa-5x"></i>
                                </div>
                                <div class="col-xs-9 text-right">
                                    <div class="huge">
                                        <%= counts.userCount %>
                                    </div>
                                    <div> Users</div>
                                </div>
                            </div>
                        </div>
                        <a href="/userList">
                            <div class="panel-footer">
                                <span class="pull-left">View Details</span>
                                <span class="pull-right"><i class="fa fa-arrow-circle-right"></i></span>

                                <div class="clearfix"></div>
                            </div>
                        </a>
                    </div>
                </div>
                <div class="col-lg-3 col-md-6">
                    <div class="panel panel-green">
                        <div class="panel-heading">
                            <div class="row">
                                <div class="col-xs-3">
                                    <i class="fa fa-gamepad fa-5x"></i>
                                </div>
                                <div class="col-xs-9 text-right">
                                    <div class="huge">
                                        <%= counts.gameCount %>
                                    </div>
                                    <div>Games</div>
                                </div>
                            </div>
                        </div>
                        <a href="/gameList">
                            <div class="panel-footer">
                                <span class="pull-left">View Details</span>
                                <span class="pull-right"><i class="fa fa-arrow-circle-right"></i></span>

                                <div class="clearfix"></div>
                            </div>
                        </a>
                    </div>
                </div>
                <div class="col-lg-3 col-md-6">
                    <div class="panel panel-yellow">
                        <div class="panel-heading">
                            <div class="row">
                                <div class="col-xs-3">
                                    <i class="fa fa-shopping-cart fa-5x"></i>
                                </div>
                                <div class="col-xs-9 text-right">
                                    <div class="huge">
                                        <%= counts.orderCount %>
                                    </div>
                                    <div>Orders</div>
                                </div>
                            </div>
                        </div>
                        <a href="/orderList">
                            <div class="panel-footer">
                                <span class="pull-left">View Details</span>
                                <span class="pull-right"><i class="fa fa-arrow-circle-right"></i></span>

                                <div class="clearfix"></div>
                            </div>
                        </a>
                    </div>
                </div>
                <div class="col-lg-3 col-md-6">
                    <div class="panel panel-red">
                        <div class="panel-heading">
                            <div class="row">
                                <div class="col-xs-3">
                                    <i class="fa fa-ticket fa-5x"></i>
                                </div>
                                <div class="col-xs-9 text-right">
                                    <div class="huge">
                                        <%= counts.couponCount %>
                                    </div>
                                    <div>Coupons</div>
                                </div>
                            </div>
                        </div>
                        <a href="/couponList">
                            <div class="panel-footer">
                                <span class="pull-left">View Details</span>
                                <span class="pull-right"><i class="fa fa-arrow-circle-right"></i></span>

                                <div class="clearfix"></div>
                            </div>
                        </a>
                    </div>
                </div>
            </div>
            <!-- /.row -->
            <div class="row" style="margin-bottom: 50px;margin-left:200px;">
                <div class="col-lg-10"  >
                    <h2 style="text-align: center;font-weight:600;margin-bottom:30px">Order Chart</h2>
                    <label for="timeRange">Select Time Range:</label>
                    <select id="timeRange">
                        <option value="yearly">Yearly</option>
                        <option value="monthly">Monthly</option>
                        <!-- <option value="weekly">Weekly</option> -->

                    </select>
                    <label for="yearSelection" class="yearLog" style="display: none;">Select Year:</label>
                    <select id="yearSelection"  style="display: none;">
                    </select>
                    <canvas id="chart-bar"></canvas>

                </div>

            </div>
            <div class="row"  style="margin-bottom: 50px;text-align: center;">
                <div class="col-lg-6" style="padding: 80px;">
                    <h2 style="text-align: center;font-weight:600;margin-bottom:30px">Top Installed Games</h2>

                    <canvas id="chart-pie"></canvas>
                </div>
                <div class="col-lg-6" style="padding-top: 80px;">
                    <h2 style="text-align: center;font-weight:600;margin-bottom:30px">Revenue Graph</h2>

                    <canvas id="chart-line"></canvas>
                </div>
            </div>
        </div>

        <!-- /.row -->
    </div>
    <!-- /.container-fluid -->
    </div>
    <!-- /#page-wrapper -->

    </div>
    <!-- /#wrapper -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/mdb-ui-kit/3.11.0/mdb.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', async function () {


            try {
                await gamesReleasedPerYear();
                await fetchGameCountsPerYear()
                await pieChart()
                await lineChart()
            } catch (error) {
                console.error('Error:', error);
            }
            const yearSelection = document.getElementById('yearSelection');
            yearSelection.addEventListener('change', fetchMonthlyGameData);


            const timeRangeSelect = document.getElementById('timeRange');
            timeRangeSelect.addEventListener('change', handleTimeRangeChange);
    
            function handleTimeRangeChange() {
                const selectedValue = timeRangeSelect.value;
            
                if (selectedValue === 'yearly') {
                    document.getElementById('yearSelection').style.display = 'none';
                    gamesReleasedPerYear();
                } else if (selectedValue === 'monthly') {
                    document.getElementById('yearSelection').style.display = 'block';
                    fetchMonthlyGameData(); // Assuming this fetches data for the monthly chart
                    // Call the function to generate the monthly chart
                    generateMonthlyChart(); // Pass the appropriate data to this function
                }
            }
           

            async function fetchGameCountsPerYear() {
                try {
                    const response = await fetch('/gamesOrderedPerYear');
                    const data = await response.json();
                    const gameCounts = data.gameCounts;
        
                    populateYearDropdown(Object.keys(gameCounts));
                } catch (error) {
                    console.error('Error:', error);
                }
            }

            function populateYearDropdown(years) {
                const yearSelection = document.getElementById('yearSelection');
                yearSelection.innerHTML = '';
                
                years.forEach((year) => {
                    const option = document.createElement('option');
                    option.value = year;
                    option.text = year;
                    yearSelection.appendChild(option);
                });
            }

            async function fetchMonthlyGameData() {
                try {
                    const year = document.getElementById('yearSelection').value;
                    const response = await fetch(`/gamesDownloadedPerMonthInYear?year=${year}`);
                    const data = await response.json();
                    console.log("Recieved data : ",data.monthlyOrderCounts)
                    
                    // Update the chart based   on the fetched data
                    generateMonthlyChart(data.monthlyOrderCounts);
                } catch (error) {
                    console.error('Error:', error);
                }
            }
            async function generateMonthlyChart(data) {
                try {
                    const monthlyGameCounts = data;
                    console.log("Monthly Game Counts:", monthlyGameCounts);
            
                    const months = Object.keys(monthlyGameCounts);
                    const counts = Object.values(monthlyGameCounts);
                    console.log("Months:", months);
                    console.log("Counts:", counts);
            
                    const ctxBar = document.getElementById('chart-bar').getContext('2d');
            
                    const dataBar = {
                        labels: months,
                        datasets: [
                            {
                                label: 'orders',
                                data: counts,
                                backgroundColor: 'rgba(66,133,244,0.6)',
                            },
                        ],
                    };
            
                    const configBar = {
                        type: 'bar',
                        data: dataBar,
                        options: {
                            plugins: {
                                title: {
                                    display: true,
                                    text: 'Orders per Month',
                                    font: {
                                        size: 18,
                                        family: 'Arial',
                                    },
                                },
                            },
                            scales: {
                                y: {
                                    beginAtZero: true,
                                },
                            },
                        },
                    };
            
                    const existingChart = window.myYearlyChart;
                    console.log("Existing Chart:", existingChart);
            
                    if (existingChart) {
                        existingChart.destroy();
                    }
                    
                    const existingChart2 = window.myMonthlyChart;
                    if (existingChart2) {
                        existingChart2.destroy();
                    }
            
                    window.myMonthlyChart = new Chart(ctxBar, configBar);
                } catch (error) {
                    console.error('Error:', error);
                }
            }
            
            
            
          

            async function gamesReleasedPerYear(){
                try {
                    const response = await fetch('/gamesOrderedPerYear');
                    const data = await response.json();
                    const gameCountsJSON = data.gameCounts
                    
                    const years = Object.keys(gameCountsJSON);
                    const counts = Object.values(gameCountsJSON);
              
                    const ctxBar = document.getElementById('chart-bar').getContext('2d');
                    const dataBar = {
                      labels: years, 
                      datasets: [
                        {
                          label: 'Orders',
                          data: counts,
                          backgroundColor: '#3399ff',
                        },
                      ],
                    };
                    const configBar = {
                      type: 'bar',
                      data: dataBar,    
                      options: {
                        plugins: {
                            title: {
                                display: true,
                                text: 'Orders per Year',
                                font: {
                                    size: 18,
                                    family: 'Arial',
                                },
                            },
                        },
                        scales: {
                          y: {
                            beginAtZero: true
                          }
                        }
                      },
                    };

                    const existingChart = window.myMonthlyChart;
                    console.log("Is exist  : ",existingChart)
                    // Check if the existing chart instance exists and destroy it
                    if (existingChart) {
                        existingChart.destroy();
                    }
            
                  window.myYearlyChart =  new Chart(ctxBar, configBar);
                  console.log("yearly chart  : ",myYearlyChart)
                  } catch (error) {
                    console.error('Error:', error);
                  }
            }
         



            async function lineChart() {
                try {
                    const response = await fetch('/revenues'); // Replace with your endpoint URL
                    const data = await response.json();
                    
                    // Extract relevant data for the line chart (e.g., dates and revenue)
                    const dates = data.dates; // Assuming 'dates' contains the dates for the X-axis
                    const revenueValues = data.revenueValues; // Assuming 'revenueValues' contains revenue data
                    console.log(dates)
                    function formatDate(dateString) {
                        const date = new Date(dateString);
                        const options = { year: 'numeric', month: 'long', day: 'numeric' };
                        return date.toLocaleDateString(undefined, options);
                      }
                      const formattedDates = dates.map(formatDate);

                    // Get the canvas element by ID
                    const ctx = document.getElementById('chart-line').getContext('2d');
        
                    // Create the line chart
                    const lineChart = new Chart(ctx, {
                        type: 'line',
                        data: {
                            labels: formattedDates, // X-axis labels (dates)
                            datasets: [{
                                label: 'Revenue', // Label for the dataset
                                data: revenueValues, // Revenue values for the Y-axis
                                borderColor: 'rgba(75, 192, 192, 1)', // Color of the line
                                borderWidth: 1,
                                fill: false // Disable filling the area under the line
                            }]
                        },
                        options: {
                            // Customize options as needed, e.g., title, scales, etc.
                            scales: {
                                y: {
                                    beginAtZero: true // Start Y-axis at 0
                                }
                            },
                            plugins: {
                                title: {
                                    display: true,
                                    text: 'Revenue Over Time' // Title of the chart
                                }
                            }
                        }
                    });
                } catch (error) {
                    console.error('Error:', error);
                }
            }

            async function pieChart(){
                try {
                    const response = await fetch('/mostInstalledGames');
                    const data = await response.json();
                    const topGames = data.topGames;
                  
                    const gameNames = topGames.map((game) => game.gameName);
                    const ordersCount = topGames.map((game) => game.ordersCount);
                  
                    const ctxPie = document.getElementById('chart-pie').getContext('2d');
                    const dataPie = {
                      labels: gameNames,
                      datasets: [
                        {
                          data: ordersCount,
                          backgroundColor: [
                            '#3399ff',
                            '#cc66ff',
                            '#33cc33',
                            '#ffcc00',
                            '#ff3333', // Add more colors if needed
                          ],
                        },
                      ],
                    };
                    const configPie = {
                      type: 'pie',
                      data: dataPie,
                      options: {
                        // You can add options here if needed
                      },
                    };
                    new Chart(ctxPie, configPie);
                  } catch (error) {
                    console.error(error);
                    // Handle error here
                  }
               } 
             
        
        });
      </script>
    <%- include('./includes/adminFooter.ejs'); -%>








   