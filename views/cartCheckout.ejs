
<%- include('header') %>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js"></script>


<style>
  .labl {
    display : block;
    width: 400px;
}
.labl > input{ /* HIDE RADIO */
    visibility: hidden; /* Makes input not-clickable */
    position: absolute; /* Remove input from document flow */
}
.labl > input + div{ /* DIV STYLES */
    cursor:pointer;
    border:2px solid transparent;
}

#couponText{
  margin-bottom: 0px;
  font-weight: 700;
  color:#fff;
  font-size:18px
}

    .flip-card {
      width: 250px;
      background-color: #05121B;
      margin-bottom: 20px;
      height: 100px;

      perspective: 1000px;
      /* Remove this if you don't want the 3D effect */
    }
    
    /* This container is needed to position the front and back side */
    .flip-card-inner {
      position: relative;
      width: 250px;
      height: 100px;
      text-align: center;
      transition: transform 0.8s;
      transform-style: preserve-3d;

    }

    /* Do an horizontal flip when you move the mouse over the flip box container */


    /* Position the front and back side */
    .flip-card-front,
    .flip-card-back {
      display: flex;
      position: absolute;
      width: 250px;
      height: 100px;
      -webkit-backface-visibility: hidden;
      /* Safari */
      backface-visibility: hidden;
      border: 2px solid #fff;
      border-radius: 10px;
      justify-content: center;
      align-items: center;


    }
    .labl > input:checked + div .flip-card-front{ /* (RADIO CHECKED) DIV STYLES */
      background-color: #fff;
  }
  .labl > input:checked + div #couponText{
    color: #05121B;
  }
    /* Style the front side (fallback if image is missing) */
    .flip-card-front {
      background-color: #05121B;
      color: rgb(255, 255, 255);
    }

    /* Style the back side */
    .flip-card-back {
      height: 100px;
      width: 250px;
      background-color: #05121B;
      color: white;
      transform: rotateY(180deg);
    }
   
    #snackbar {
       
      visibility: hidden;
      min-width: 250px;
      margin-left: -125px;
      background-color: #4eb81c;
      color: #fff;
      text-align: center;
      border-radius: 5px;
      padding: 10px;
      position: fixed;
      z-index: 1;
      left: 50%;
      bottom: 30px;
      font-size: 17px;
    }
    
    #snackbar.show {
      visibility: visible;
      -webkit-animation: fadein 0.5s, fadeout 0.5s 2.5s;
      animation: fadein 0.5s, fadeout 0.5s 2.5s;
    }
    
    @-webkit-keyframes fadein {
      from {bottom: 0; opacity: 0;} 
      to {bottom: 30px; opacity: 1;}
    }
    
    @keyframes fadein {
      from {bottom: 0; opacity: 0;}
      to {bottom: 30px; opacity: 1;}
    }
    
    @-webkit-keyframes fadeout {
      from {bottom: 30px; opacity: 1;} 
      to {bottom: 0; opacity: 0;}
    }
    
    @keyframes fadeout {
      from {bottom: 30px; opacity: 1;}
      to {bottom: 0; opacity: 0;}
    }
    #useBtn{
      width: 100px;
      height: 35px;
      border: 2px solid #fff ;
      color: #fff;
      font-size: 18px;
      border-radius: 5px;
      text-align: center;
    }
    #cancelButton{
      width: 100px;
      height: 35px;
      border: 2px solid #fff ;
      color: #fff;
      font-size: 18px;
      border-radius: 5px;
      text-align: center;
    }
    .modal-content button {
      background-color: #04AA6D;
      color: white;
      padding: 14px 20px;
      margin: 8px 0;
      border: none;
      cursor: pointer;
      width: 40%;
      opacity: 0.9;
      margin-right: 25px
  }

  .modal-content p {
      width: 500px;
  }

  .modal-content button:hover {
      opacity: 1;
  }

  /* Float cancel and delete buttons and add an equal width */
  .cancelbtn,
  .deletebtn {
      float: left;
      width: 50%;
  }

  /* Add a color to the cancel button */
  .cancelbtn {
      background-color: #ccc;
      color: black;
  }

  /* Add a color to the delete button */
  .deletebtn {
      background-color: #f44336;
  }

  /* Add padding and center-align text to the container */
 

  /* The Modal (background) */
  .modal {
      height: 300px;
      display: none;
      /* Hidden by default */
      position: fixed;
      /* Stay in place */
      z-index: 1;
      /* Sit on top */
      left: 0;
      top: 0;
      width: 100%;
      /* Full width */
      height: 100%;
      /* Full height */
      overflow: auto;
      /* Enable scroll if needed */
      background-color: #0000004f;
      padding-top: 150px;

  }

  /* Modal Content/Box */
  .modal-content {
      padding: 40px;
      background-color: #fefefe;
      margin: 8% auto 8% auto;
      /* 5% from the top, 15% from the bottom and centered */
      border: 1px solid #888;
      width: 25%;
      /* Could be more or less, depending on screen size */
  }

  /* Style the horizontal ruler */
 

  /* The Modal Close Button (x) */
  .close {
      position: absolute;
      right: 35px;
      top: 15px;
      font-size: 40px;
      font-weight: bold;
      color: #f1f1f1;
  }

  .close:hover,
  .close:focus {
      color: #f44336;
      cursor: pointer;
  }

  /* Clear floats */
  .clearfix::after {
      content: "";
      clear: both;
      display: table;
  }

  /* Change styles for cancel button and delete button on extra small screens */
  @media screen and (max-width: 300px) {

      .cancelbtn,
      .deletebtn {
          width: 100%;
      }
  }

  .modal-content h1 {
      font-size: 20px;
  }
  </style>
  <!-- Breadcrumb Section Begin -->
  <section class="breadcrumb-section set-bg" data-setbg="/images/banner3.jpg ">
    <div class="container">
      <div class="row">
        <div class="col-lg-12 text-center">
          <div class="breadcrumb__text">
            <h2>Checkout</h2>

          </div>
        </div>
      </div>
    </div>
  </section>
  <!-- Breadcrumb Section End -->

  <!-- Checkout Section Begin -->
  <section class="checkout spad">
    <div class="container">
      <!-- <div class="row">
            <div class="col-lg-12">
                <h6><span class="icon_tag_alt"></span> Have a coupon? <a href="#">Click here</a> to enter your code
                </h6>
            </div>
        </div> -->
      <div class="checkout__form">
        <h4>Billing Details</h4>

        <div class="row">
          <div class="col-lg-8 col-md-6">

            <!-- <div class="shoping__continue">
              <div class="shoping__discount">
                <h5>Discount Coupons</h5>

                <h6>
                  <span class="icon_tag_alt"></span> Have a coupon? Enter your
                  coupon here
                </h6>

              
                  <input type="text" id="couponCode" placeholder="Enter your coupon code" name="couponCode" required />
                  <button type="submit" id="coupon-btn" onclick="applyCoupon()" class="site-btn">APPLY COUPON</button>
        
              </div>
            </div> -->
            <% if(couponError){ %>
              <span style="font-size: 15px;color:rgb(255, 71, 71);"></span>
              <% } %>

                <!-- coupons -->
                <div class="shoping__discount">
                  <h5>Available Coupons</h5>
                  <div id="availableCoupons">
                  <% if(isCouponAvailable){ %>
                    <% availableCoupons.forEach(coupon=>{ %>
                      <label  class="labl">
                        <input type="radio" name="radioname" value=<%= coupon.discountPercent %> />

                        <div class="flip-card" >
                          <div class="flip-card-inner">
                            <div class="flip-card-front" id='<%= coupon.discountValue %>' onclick="applyCoupon('<%= coupon.discountValue %>')" style="display: flex;flex-direction: column;padding:3px; padding-top:20px">
                              <p id="couponText">
                                Get <span id="discountPercentValue"><%= coupon.discountValue %></span>% Off for the
                                  <% if(coupon.discountType=='firstPurchase' ){ %>
                                    First Purchase
                                  <% }else if(coupon.discountType=='minimumPurchase'){ %>
                                      every purchase above â‚¹ <%= coupon.minimumPurchaseAmount %>
                                  <% }else if(coupon.discountType=='forAll'){ %>
                                    every purchase 
                                    <% } %>
                                  </p>
                             <p style="font-size: 14px;">Expires in <%=   coupon.validUntil.toLocaleDateString("en-IN",{ day: '2-digit', month: 'short', year: 'numeric' }) %></p> 
                            </div>
                            <div class="flip-card-back" style="display: flex;flex-direction: column;">
  
                              <input type="text" id="myInput" style="color: #fff;font-size:20px;background-color: #05121B;text-align:center;border:none;"  value="<%= coupon.code %>"  disabled="disabled">
                          
                                
                               
                            </div>
                          </div>
                        </div>
                      </label>
                     
                      <% }) }else{ %>
                        <span >No Coupons Available</span>
                        <% } %>
                      </div>
                        <p id="noCoupons"></p>

                </div>

                <form id="checkoutForm" >

                  <div class="shoping__discount">
                    <h5> Payment Method</h5>

                    <div class="form-check form-check-inline radio-btn">
                      <input class="form-check-input" type="radio" name="paymentOption" id="onlinePayment"
                        value="onlinePayment" checked>
                      <label class="form-check-label" for="onlinePayment"
                        style="font-weight: 500; margin-right:20px">Online Payment</label>
                    </div>
                    <div class="form-check form-check-inline radio-btn">
                      <!-- <input class="form-check-input" type="radio" name="paymentOption" id="walletPayment"
                        value="walletPayment" disabled> -->
                      <!-- <label class="form-check-label" for="walletPayment"
                        style="font-weight: 500; margin-right:20px">Others</label> -->
                    </div>

                  </div>
                  <div class="shoping__discount" style="width: 400px;align-items: center;display:flex;border-radius:5px;border:2px solid #fff;padding:15px">
                    <div style="width:70%">
                      <h5> Use wallet balance</h5>
                  
                    <p>Balance : <span id="balance"><%= balance %></span></p>
                   <span id="noBalance"> </span>
                    </div>
                    
                    <div type="button" id="useBtn" >Use </div>
                    <div type="button" id="cancelButton" onclick="cancelWallet()" style="display: none;">Cancel </div>

                  </div>
                 
          </div>

          <div class="col-lg-4 col-md-6">
            <div class="checkout__order">
              <h4>Your Order</h4>
              <div class="checkout__order__products">
                Products <span>Total</span>
              </div>
              <ul>
                <% items.forEach(game=>{ %>
                  <li>
                    <%= game.gameId.gameName %> <span>â‚¹<%= game.gameId.price %></span>
                  </li>
                  <% }) %>
              </ul>
             
              <div class="checkout__order__subtotal">
                Subtotal <span>â‚¹<%= subTotal %></span>
              </div>
              <div class="checkout__order__subtotal2" id="appliedCoupons" style="display: flex;position:relative;height: 110px; display:none">
                <div style="position: absolute;left:10%">
                  <p style="margin-bottom: 5px;font-weight: 600;" >Applied Coupon</p> 
                  <!-- <p style="margin-bottom: 5px;font-size: 14px;">Coupon code : <span id="appliedCode"></span> </p> -->
                  <p style="margin-bottom: 5px;font-size: 14px;"><span id="discountPercent"></span> off for this purchase</p>
                </div>
               
                  <div style="position: absolute;right:20px;" id="closeBtn">
                  <div onclick="removeCoupon()"  style="background-color: transparent;padding: 0%;border:none;"> <i class="fa-solid fa-xmark"></i></div> 
                  </div>  
              </div>
              <div class="checkout__order__subtotal">
                Discount <span id="discountField"></span>
              </div>
              <div class="checkout__order__subtotal" id="walletDiscountDisplay" style="display: none;">
                Wallet <span id="walletDiscount"></span>
              </div>
              <div class="checkout__order__total">
                Total <span id="totalAmount">â‚¹<%= totalAmount %></span>
              </div>
              <input type="text" name="totalAmount" id="total" value="<%= totalAmount %>" hidden>



              <button id="" onclick="btnClick()" type="button" class="site-btn">PLACE ORDER</button>

            </div>
          </div>  
          </form> 
        </div>

      </div>
    </div>

    <div id="snackbar"></div>
    <div id="id01" class="modal">
      <span onclick="closeModal()" class="close" title="Close Modal">&times;</span>
      <div class="container modal-content">
          <p>Are you sure you want to proceed ? </p>
          <div class="clearfix">
              <button type="button" id="cancelbtn" onclick="closeModal()">Cancel</button>
              <button type="button" id="deleteGameBtn" onclick="proceedOrder()">Proceed</button>
          </div>
      </div>
  </div>
  </section>
  <!-- <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>  -->
  <script src="https://checkout.razorpay.com/v1/checkout.js"></script>

  <script>
    window.walletApplied=false
      if('<%= balance %>'==0){
        document.getElementById('useBtn').style.display='none'
        document.getElementById('noBalance').innerText='No Balance'
      }

    //USE WALLET

    document.getElementById('useBtn').addEventListener('click',useWallet)
    document.getElementById('cancelbutton').addEventListener('click',cancelWallet)

    async function useWallet(){
      console.log("coupon ,",window.couponApplied)
      try{
        
        let totalAmount=document.getElementById('total').value
        totalAmount=parseInt(totalAmount)
        let balance = `<%= balance%>`
        balance= parseInt(balance)
        let  moneyUsed;
        if(balance < totalAmount){
          totalAmount=totalAmount-balance
          moneyUsed=balance
          balance=0
          window.walletApplied=true
        }else{
          window.walletApplied=true

          moneyUsed=totalAmount
          balance=balance-totalAmount
          totalAmount=0
        }
        
        document.getElementById('total').value=totalAmount;
        document.getElementById('totalAmount').innerText=`${totalAmount}`
        document.getElementById('balance').innerHTML=balance
        document.getElementById('walletDiscountDisplay').style.display='block'
        document.getElementById('walletDiscount').innerText=moneyUsed
        document.getElementById('useBtn').style.display='none'
        document.getElementById('cancelButton').style.display='block'
      }catch(error){
        console.error('Error applying coupon:', error);
      }
    }

   function cancelWallet(){
      try{
        window.walletApplied=false
        if(window.couponApplied){
          let subTotal = parseInt('<%= subTotal %>');
          let discountValue=document.getElementById('discountField').innerText
          console.log("discount",discountValue)
          discountValue= parseInt(discountValue)
          
          let totalAmount=document.getElementById('total').value
        totalAmount=parseInt(totalAmount)
        let balance = `<%= balance%>`
        balance= parseInt(balance)
        totalAmount=document.getElementById('walletDiscount').innerText
        totalAmount=parseInt(totalAmount)
        
        document.getElementById('total').value=totalAmount;
        document.getElementById('totalAmount').innerText=totalAmount
        }else{
          document.getElementById('total').value=`<%= totalAmount %>`;
          document.getElementById('totalAmount').innerText=`<%= totalAmount %>`
        }
        
        
        document.getElementById('balance').innerHTML=`<%= balance %>`
        document.getElementById('walletDiscountDisplay').style.display='none'
        document.getElementById('walletDiscount').innerText=0
        document.getElementById('useBtn').style.display='block'
        document.getElementById('cancelButton').style.display='none'
      }catch(error){        
        console.error('Error applying coupon:', error);
      }
    }



    async function applyCoupon(discountPercent) {
      try {
        console.log(discountPercent)
        
        let subTotal = parseInt('<%= subTotal %>');
      
      
    
        const discountPercentElement = document.getElementById('discountPercent');
        const totalAmountElement = document.getElementById('totalAmount');
        const totalInputElement = document.getElementById('total');
        const discountFieldElement = document.getElementById('discountField');
        const appliedCouponsElement = document.getElementById('appliedCoupons');
        const availableCouponsElement = document.getElementById('availableCoupons');
        //document.getElementById(`${discountPercent}`).style.backgroundColor='#fff'
        
          // Uncheck other radio buttons in the group
         
        window.couponApplied = true

        if(window.walletApplied){
          const discountValue = parseInt((discountPercent / 100) * subTotal);
          const totalAmount = subTotal - discountValue;
          discountPercentElement.textContent = discountPercent + '%';
         
          discountFieldElement.innerText =  discountValue;
          let balance = document.getElementById('balance').innerHTML
          balance=parseInt(balance)
          balance=balance+discountValue
          document.getElementById('balance').innerHTML=balance
       let moneyUsed=  document.getElementById('walletDiscount').innerText
       moneyUsed=parseInt(moneyUsed)
       moneyUsed=moneyUsed-discountValue
       console.log('moneyUsed',moneyUsed)
       document.getElementById('walletDiscount').innerText=moneyUsed
          appliedCouponsElement.style.display = 'block';
//availableCouponsElement.style.display = 'none';
        
          showToast('Coupon applied', 'green');

        }else{
          const discountValue = parseInt((discountPercent / 100) * subTotal);
          const totalAmount = subTotal - discountValue;
        
          discountPercentElement.textContent = discountPercent + '%';
          totalAmountElement.innerText =  totalAmount;
          totalInputElement.value = totalAmount;
          discountFieldElement.innerText =  discountValue;
         
          appliedCouponsElement.style.display = 'block';
//availableCouponsElement.style.display = 'none';
        
          showToast('Coupon applied', 'green');
        }
          
        
      } catch (error) {
        console.error('Error applying coupon:', error);
      }
    }

    function removeCoupon(){
      window.couponApplied = false

      let subTotal ='<%= subTotal %>' 
      subTotal=parseInt(subTotal)
      let balance = `<%= balance%>`
        balance= parseInt(balance)
      document.getElementById("appliedCoupons").style.display="none"
      document.getElementById('availableCoupons').style.display="block"
    
       
      if(window.walletApplied){
       // subTotal=subTotal-balance
      //  document.getElementById('totalAmount').innerText=subTotal
      let moneyUsed=  document.getElementById('walletDiscount').innerText
      moneyUsed=parseInt(moneyUsed)
      let discountValue=document.getElementById('discountField').innerText
      discountValue= parseInt(discountValue)
      document.getElementById('walletDiscount').innerText=moneyUsed+discountValue
      let balance=document.getElementById('balance').innerHTML
      balance=parseInt(balance)
      document.getElementById('balance').innerHTML=balance-discountValue
      


      }else{
        document.getElementById('total').value=subTotal;

        document.getElementById('totalAmount').innerText=subTotal
      }

      uncheckRadioButtons()

      document.getElementById('discountField').innerText=0
      showToast('Coupon removed', 'red');

     }


     const radioButtons = document.getElementsByName('radioname');

     function uncheckRadioButtons() {
      const radioButtons = document.getElementsByName('radioname');

      console.log('hi')
      radioButtons.forEach(radio => {
        radio.checked = false;
      });
      console.log('hi3')

    }
    radioButtons.forEach(radio => {
      radio.addEventListener('change', handleRadioChange);
    });
    function handleRadioChange() {
      for (let i = 0; i < radioButtons.length; i++) {
        if (radioButtons[i].checked) {
          const selectedColor = radioButtons[i].value;
          targetDiv.style.backgroundColor = selectedColor;
          break;
        }
      }
    }

    function showToast(message,color) {
      var x = document.getElementById("snackbar");
      document.getElementById('snackbar').textContent=message
      document.getElementById('snackbar').style.backgroundColor=color
      x.className = "show";
      setTimeout(function(){ x.className = x.className.replace("show", ""); }, 3000);
  }



  function openModal(){
    document.getElementById('id01').style.display = 'block';
  }
  function closeModal() {
    document.getElementById('id01').style.display = 'none';
}

  async function proceedOrder(){

    let totalAmount='<%= subTotal %>'
    totalAmount=parseInt(totalAmount)
    let balance =document.getElementById('balance').innerHTML
    balance=parseInt(balance)

    try{
      const response = await fetch('/proceedOrder', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({
        
          totalAmount: totalAmount,
          balance:balance
        }),
      })
      const responseData = await response.json();
    console.log(responseData)
    if (responseData.status) {
      let downloadGames = responseData.downloadGames;
    
      const queryParams = `?downloadGames=${downloadGames}`;
      window.location.href = `/orderSuccessfull/${queryParams}`;
    } else {
      alert('Payment Failed. Try again later.');
    }


    }catch(error){
      console.error('Error verifying payment:', error)
    }
  }

  
  async function btnClick() {
      try {
        const paymentOption = document.querySelector('input[name="paymentOption"]:checked').value;
        let totalAmount = document.getElementById('total').value;
        totalAmount=parseInt(totalAmount)
        console.log("Total : ",totalAmount)
        if(totalAmount==0){
          openModal()
        }else{

          const response = await fetch('/createOrder', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json',
            },
            body: JSON.stringify({
              paymentOption: paymentOption, 
              totalAmount: totalAmount,
              currency: 'INR',
            }),
          });
          const data = await response.json();
          console.log('DATA : ', data);
      
          if (data.method=='wallet') {
            const balanceErr=data.balanceErr
            const totalAmount=data.totalAmount
            const queryParams = `?balanceErr=${balanceErr}&totalAmount=${totalAmount}`;
  
           window.location.href=`/walletPlaceOrder/${queryParams}`
          } else {
            // If it's for online payment, proceed with Razorpay
            const options = {
              key: 'rzp_test_rWizGdKAm2zOqw',
              amount: data.amount,
              currency: data.currency,
              name: 'Pixel Games',
              description: 'Test Transaction',
              order_id: data.id,
              handler:  function (response) {
                console.log(response);
                verifyPayment(response, data)
              },
              "modal": {
                "ondismiss": function () {
                  console.log('Payment window closed');
                  paymentFailed(data);
                }
              },
              prefill: {
                name: 'John Doe',
                email: 'john@example.com',
                contact: '9000090000',
              },
              theme: {
                color: '#05121B',
              },
            };
            
            const rzp = new Razorpay(options);
            rzp.open();
          }
        }
      } catch (error) {
        console.error('Error initiating payment:', error);
        alert('Error during payment. Please try again.');
      }
    }
    
    const btn = document.getElementById('rzp-button');
    btn.addEventListener('click', function (event) {
      event.preventDefault();
      btnClick();
    });
    
  // ... Your existing code

async function verifyPayment(payment, order) {
  try {
    let discountValue=document.getElementById('discountField').innerText
      discountValue= parseInt(discountValue)
    const paymentOption = document.querySelector('input[name="paymentOption"]:checked').value;
    let isWalletUsed = window.walletApplied
    const response = await fetch('/verifyPayment', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify({
        payment,
        order,
        discountValue,
        paymentOption,
        isWalletUsed
      })
    });
    const responseData = await response.json();
    console.log(responseData)
    if (responseData.status) {
      let downloadGames = responseData.downloadGames;
    
      const queryParams = `?downloadGames=${downloadGames}`;
      window.location.href = `/orderSuccessfull/${queryParams}`;
    } else {
      alert('Payment Failed. Try again later.');
    }
  } catch (error) {
    console.error('Error verifying payment:', error);
    alert('Error verifying payment. Please try again.');
  }
}

// Adjusted paymentFailed function
function paymentFailed(order) {
  fetch('/paymentFailed', {
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
    },
    body: JSON.stringify({ order }),
  })
    .then(response => response.json())
    .then(data => {
      if (data.status) {
        window.location.href = '/cart/Checkout';
        /* Additional handling for success */
      } else {
        /* Handle other scenarios */
      }
    })
    .catch(error => {
      console.error('Error:', error);
      alert('Error processing payment failure.');
    });
}

   /* function verifyPayment(response, data) {
      fetch('/cart/placeOrder', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify({
         totalAmount:data.totalAmount/  
        })
      })
      .then(response => {
       const datas= response.json()
       const downloadGames=datas.downloadGames
         console.log("RESPonse: ",datas)
          const queryParams = `?downloadGames=${downloadGames}`;
          window.location.href=`/orderSuccessfull/${queryParams}`

      })
    }  */
    
  </script>


  <%- include('footer') %>